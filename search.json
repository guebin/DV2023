[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "데이터 시각화 (2023)",
    "section": "",
    "text": "질문하는 방법\n\n카카오톡: 질문하러 가기 // 학기종료이후 폐쇄함\n이메일: guebin@jbnu.ac.kr\n직접방문: 자연과학대학 본관 205호\nZoom: 카카오톡이나 이메일로 미리 시간을 정할 것\nLMS쪽지: https://ieilms.jbnu.ac.kr/\n\n기출문제\n\n2021-중간: https://guebin.github.io/DV2021/2021/11/08/midsol.html\n2021-기말: https://guebin.github.io/DV2021/2021/12/03/데이터시각화-기말고사.html, 1~2번 풀이\n2022-중간: https://guebin.github.io/DV2022/posts/2022-10-30-9wk-1-mid.html\n2022-기말: https://guebin.github.io/DV2022/posts/2022-12-19-final.html\n\n공지사항\n\n9월27일, 10월2일 수업은 영상콘텐츠 업로드로 대체합니다.\n\n\n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 18, 2023\n\n\n03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병\n\n\n최규빈 \n\n\n\n\nSep 13, 2023\n\n\n02wk-2: Seaborn 간략한 소개, 훌륭한 시각화\n\n\n최규빈 \n\n\n\n\nSep 11, 2023\n\n\n02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2\n\n\n최규빈 \n\n\n\n\nSep 6, 2023\n\n\n01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)\n\n\n최규빈 \n\n\n\n\nSep 4, 2023\n\n\n01wk-1: 박스플랏, 히스토그램\n\n\n최규빈 \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/01wk-1.html",
    "href": "posts/01wk-1.html",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "",
    "text": "박스플랏, 히스토그램"
  },
  {
    "objectID": "posts/01wk-1.html#a.-motivating-example",
    "href": "posts/01wk-1.html#a.-motivating-example",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "A. motivating example",
    "text": "A. motivating example\n- 통계란?\n- 평균 좋아해요?\n# 예제1 – 전북고등학교: 평균은 좋은 측정값인가?\n- 전북고등학교에서 통계학을 수업하는 A선생님과 B선생님의 있다.\n\ny1=[75,75,76,76,77,77,78,79,79,98] # A선생님에게 통계학을 배운 학생의 점수들\ny2=[76,76,77,77,78,78,79,80,80,81] # B선생님에게 통계학을 배운 학생의 점수들 \n\n- 어떤반이 더 공부를 잘할까?, 누가 더 잘 가르칠까?\n\nnp.mean(y1)\n\n79.0\n\n\n\nnp.mean(y2)\n\n78.2\n\n\n- 의사결정: A선생님에게 배운 학생들의 평균이 더 높다. -&gt; A선생님이 더 강의를 잘 하셨다?\n- 반론: 평균은 A반(=A선생님에게 통계학을 배운 반)이 더 높다. 그런데 98점을 받은 학생이 A반에 포함되어서 A반이 전체평균이 높게 나온것이고 나머지 학생들은 전체적으로 B반 학생들이 더 시험을 잘 보았다고 해석할 수 있다.\n- 교훈: 단순한 평균비교보다 학생들이 받은 점수의 분포를 비교해보는 것이 중요하다. 분포를 살펴보는 방법 중 유용한 방법이 박스플랏이다.\n#"
  },
  {
    "objectID": "posts/01wk-1.html#b.-matplotlib으로-boxplot-그리기",
    "href": "posts/01wk-1.html#b.-matplotlib으로-boxplot-그리기",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "B. matplotlib으로 boxplot 그리기",
    "text": "B. matplotlib으로 boxplot 그리기\n- A반 학생들의 박스플랏 그리기\n\nplt.boxplot(y1);\n\n\n\n\n- B반 학생들의 박스플랏 그리기\n\nplt.boxplot(y2);\n\n\n\n\n- A반 학생들의 점수와 B반 학생들의 점수를 나란히 박스플랏으로 그리자.\n\nplt.boxplot([y1,y2]);"
  },
  {
    "objectID": "posts/01wk-1.html#c.-boxplot이란",
    "href": "posts/01wk-1.html#c.-boxplot이란",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "C. boxplot이란?",
    "text": "C. boxplot이란?\n- Galarnyk (2023)\n\nGalarnyk, Michael. 2023. “Python_tutorials.” https://github.com/mGalarnyk/Python_Tutorials.\n\nhttps://github.com/mGalarnyk/Python_Tutorials/blob/master/Statistics/boxplot/box_plot.ipynb\n\n\n\nCode\nnp.random.seed(916170)\n\n# connection path is here: https://stackoverflow.com/questions/6146290/plotting-a-line-over-several-graphs\nmu, sigma = 0, 1 # mean and standard deviation\ns = np.random.normal(mu, sigma, 1000)\n\nfig, axes = plt.subplots(nrows = 1, ncols = 1, figsize=(10, 5))\n\n# rectangular box plot\nbplot = axes.boxplot(s,\n                vert=False,\n                patch_artist=True, \n                showfliers=True, # This would show outliers (the remaining .7% of the data)\n                positions = [0],\n                boxprops = dict(linestyle='--', linewidth=2, color='Black', facecolor = 'red', alpha = .4),\n                medianprops = dict(linestyle='-', linewidth=2, color='Yellow'),\n                whiskerprops = dict(linestyle='-', linewidth=2, color='Blue', alpha = .4),\n                capprops = dict(linestyle='-', linewidth=2, color='Black'),\n                flierprops = dict(marker='o', markerfacecolor='green', markersize=10,\n                  linestyle='none', alpha = .4),\n                widths = .3,\n                zorder = 1)   \n\naxes.set_xlim(-4, 4)\nplt.xticks(fontsize = 14)\n\naxes.set_yticks([])\naxes.annotate(r'',\n            xy=(-.73, .205), xycoords='data',\n            xytext=(.66, .205), textcoords='data',\n            arrowprops=dict(arrowstyle=\"|-|\",\n                            connectionstyle=\"arc3\")\n            );\n\naxes.text(0, .25, \"Interquartile Range \\n(IQR)\",  horizontalalignment='center', fontsize=18)\naxes.text(0, -.21, r\"Median\", horizontalalignment='center', fontsize=16);\naxes.text(2.65, -.15, \"\\\"Maximum\\\"\", horizontalalignment='center', fontsize=18);\naxes.text(-2.65, -.15, \"\\\"Minimum\\\"\", horizontalalignment='center', fontsize=18);\naxes.text(-.68, -.24, r\"Q1\", horizontalalignment='center', fontsize=18);\naxes.text(-2.65, -.21, r\"(Q1 - 1.5*IQR)\", horizontalalignment='center', fontsize=16);\naxes.text(.6745, -.24, r\"Q3\", horizontalalignment='center', fontsize=18);\naxes.text(.6745, -.30, r\"(75th Percentile)\", horizontalalignment='center', fontsize=12);\naxes.text(-.68, -.30, r\"(25th Percentile)\", horizontalalignment='center', fontsize=12);\naxes.text(2.65, -.21, r\"(Q3 + 1.5*IQR)\", horizontalalignment='center', fontsize=16);\n\naxes.annotate('Outliers', xy=(2.93,0.015), xytext=(2.52,0.20), fontsize = 18,\n            arrowprops={'arrowstyle': '-&gt;', 'color': 'black', 'lw': 2},\n            va='center');\n\naxes.annotate('Outliers', xy=(-3.01,0.015), xytext=(-3.41,0.20), fontsize = 18,\n            arrowprops={'arrowstyle': '-&gt;', 'color': 'black', 'lw': 2},\n            va='center');\n\n\n\n\n\n\n가장 큰 값이 100%, 가장 작은 값이 0%, 중간값이 50%"
  },
  {
    "objectID": "posts/01wk-1.html#d.-boxplot을-언제-쓰면-좋을까",
    "href": "posts/01wk-1.html#d.-boxplot을-언제-쓰면-좋을까",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "D. boxplot을 언제 쓰면 좋을까?",
    "text": "D. boxplot을 언제 쓰면 좋을까?\n- 박스플랏의 장점: 단순히 평균을 주는 것보다 데이터를 파악하고 직관을 얻기에 유리하다.\n- 박스플랏이 이용되는 범위:\n\n첫 데이터 분석때 자료 분포를 파악하기 용이\nKaggel등의 대회참여시, 두 개 이상의 모형의 성능을 비교"
  },
  {
    "objectID": "posts/01wk-1.html#a.-motivating-example-1",
    "href": "posts/01wk-1.html#a.-motivating-example-1",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "A. motivating example",
    "text": "A. motivating example\n- 전북고예제에서 우리의 소망: “A반 B반 중에 어떤 반이 공부를 더 잘하냐?”, “A선생님과 B선생님 중 어떤 분의 강의가 효과적이었다고 평할 수 있는가?” 와 같은 단순한 질문에 대한 대답\n\n보통 이러한 질문은 중심경향값 중 하나를 골라서 비교하면 되었다.\n여기에서 중심경향값이란 데이터 분포의 중심을 보여주는 값으로 자료 전체를 대표할 수 있는 값을 말함. 평균, 중앙값등이 대표적인 중심경향값이다.\n\n- 전북고예제에서는 “A반 B반 중에서 어떤 반이 공부를 더 잘하냐?” 라는 질문의 대답으로 단순평균비교로는 의미가 없었다. 오히려 결과론적으로 보면 중앙값이 더 타당해 보인다.\n- 그런데 사실 생각해보면 중앙값을 기준으로 B반이 공부를 더 잘했다고 주장하는 것도 애매하다. 어쨌든 가장 공부잘한 학생은 A반에 있으니까!\n\n에이 한명 뿐이잖아요? 라고 생각할 수 있는데 그 한명이 2명 3명으로 점점 늘어난다고 생각해보자, 합리적인 기준을 제시할 수 있는가?\n그리고 A반을 지도한 선생님이 영재를 지도하는데 특화된 선생님일수도 있잖아요?\n\n- 사실 “A반 B반중에 누가 더 공부를 잘하냐?” 라는 질문은 굉장히 대답하기 곤란한 질문이다. 왜냐하면\n\n이슈1: 단순 평균비교로 이러한 질문에 답을 하기 어렵다.\n이슈2: 박스플랏으로 전체분포를 파악해도 어떠한 반이 더 공부를 잘한다는 기준을 잡는게 애매하다.\n\n- 그런데 특수한 경우에는 “A반 B반중에 누가 더 공부를 잘하냐?” 라는 질문에 대한 대답을 깔끔하게 할 수 있다.\n# 예제2 – 정규분포 전북고등학교: 평균은 좋은 측정값인가?\n- A반과 B반의 통계학 성적이 아래와 같다고 하자.\n\nnp.random.seed(43052)\ny1 = np.random.randn(10000)\ny2 = np.random.randn(10000) + 0.5 \n\n\nnp.mean(y1),np.mean(y2)\n\n(-0.011790879905079434, 0.4979147460611458)\n\n\n\nnp.mean(y2) - np.mean(y1)\n\n0.5097056259662253\n\n\ny2의 값이 y1의 값보다 전체적으로 0.5097056259662253 정도 높다고 볼 수 있다?\n\nplt.boxplot([y1,y2]);\n\n\n\n\n\n분포의 모양이 거의 비슷, 왼쪽그림을 컨트롤+C 하여 오른쪽에 붙인다음 0.5정도 y축으로 올린느낌이다!\n\n- 여기에서는 “B반의 성적 \\(\\approx\\) A반의 성적 + 0.5” 라고 주장해도 큰 무리가 없어보인다. 따라서 이 경우에는 “A반 B반 중에 어떤반이 더 공부를 잘하냐?” 라는 질문에 대하여 “B반이 평균적으로 0.5점정도 더 공부를 잘합니다” 라고 대답해도 괜찮다.\n\n이 예제에서는 우연히 극단적인 학생이 없었음.\n그렇지만 혹시 극단적인 학생이 나온다면? 걱징X. 너무 극단적인 값이 많이 나오면 정규분포가 아님 + 만약에 어떠한 반에서 극단적인 학생이 나온다면 똑같은 확률로 다른반 역시 그러한 극단적 학생이 나올 것\n\n- 결론: 정규분포 분포가정을 한다면 이슈1,2에 대한 문제를 한번에 해결가능 함\n#\n- 정규분포가정은 어떻게 할 수 있나? (= 데이터를 보고 어떻게 정규분포라고 알 수 있는가?): 데이터의 히스토그램을 그려서 종 모양이 되는지 확인해본다.1\n1 아직 초보단계라서 이것밖에 모를 수 있어요"
  },
  {
    "objectID": "posts/01wk-1.html#b.-histogram-이란",
    "href": "posts/01wk-1.html#b.-histogram-이란",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "B. histogram 이란?",
    "text": "B. histogram 이란?\n- 히스토그램: X축이 변수의 구간, Y축은 그 구간에 포함된 빈도를 의미하는 그림"
  },
  {
    "objectID": "posts/01wk-1.html#c.-histogram-그리기",
    "href": "posts/01wk-1.html#c.-histogram-그리기",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "C. histogram 그리기",
    "text": "C. histogram 그리기\n- 히스토그램의 예시1 – 기본플랏, ;으로 결과 생략하기\n\ny=[10,11,12,15,16,20,21,22,23,24,25]\n\n\nplt.hist(y)\n\n(array([2., 1., 0., 1., 1., 0., 1., 1., 2., 2.]),\n array([10. , 11.5, 13. , 14.5, 16. , 17.5, 19. , 20.5, 22. , 23.5, 25. ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\nplt.hist(y,bins=10)\n\n(array([2., 1., 0., 1., 1., 0., 1., 1., 2., 2.]),\n array([10. , 11.5, 13. , 14.5, 16. , 17.5, 19. , 20.5, 22. , 23.5, 25. ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n- 히스토그램 예시2 – bins 옵션이용\n\nplt.hist(y,bins=3)\n\n(array([3., 2., 6.]),\n array([10., 15., 20., 25.]),\n &lt;BarContainer object of 3 artists&gt;)\n\n\n\n\n\n- 히스토그램 예시3 – bins=3 옵션의 결과값 해석\n\nplt.hist(y,bins=3)\n\n(array([3., 2., 6.]),\n array([10., 15., 20., 25.]),\n &lt;BarContainer object of 3 artists&gt;)\n\n\n\n\n\n\n가장 큰 값은 25, 가장 작은 값은 10이므로 range는 15이다.\nrange / bins = 15 / 3 = 5 이므로 각 구간의 간격은 5이다.\n구간은 [10,15), [15,20), [20,25] 로 나눈다.\n각 구간에 포함된 자료의 수는 3,2,6 이다.\n\n- 히스토그램 예시4 – bins=7 옵션의 결과값 해석\n\nplt.hist(y,bins=7) \n\n(array([3., 0., 2., 0., 1., 2., 3.]),\n array([10.        , 12.14285714, 14.28571429, 16.42857143, 18.57142857,\n        20.71428571, 22.85714286, 25.        ]),\n &lt;BarContainer object of 7 artists&gt;)\n\n\n\n\n\n\n가장 큰 값은 25, 가장 작은 값은 10이므로 range는 15이다.\nrange / bins = 15 / 7 = 2.142857142857143 이므로 각 구간의 간격은 2.142857142857143이다.\n구간은 [10,12.14285714), [12.14285714,14.28571429,), [22.85714286,25] 로 나눈다.\n각 구간에 포함된 자료의 수는 3,0,2,0,1,2,3 이다.\n\n- 히스토그램 예시5 – range 옵션\n\nplt.hist(y,bins=7,range=[0,30]) # range를 변경하면 --&gt; 구간도 달라짐\n\n(array([0., 0., 3., 2., 2., 4., 0.]),\n array([ 0.        ,  4.28571429,  8.57142857, 12.85714286, 17.14285714,\n        21.42857143, 25.71428571, 30.        ]),\n &lt;BarContainer object of 7 artists&gt;)\n\n\n\n\n\n- 히스토그램 예시6 – 나란히 그리기\n\nnp.random.seed(43052)\ny1 = np.random.randn(10000)\ny2 = np.random.randn(10000) + 0.5 \nplt.hist([y1,y2],bins=100);"
  },
  {
    "objectID": "posts/01wk-1.html#a.-예비학습1-이미지자료-다운로드",
    "href": "posts/01wk-1.html#a.-예비학습1-이미지자료-다운로드",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "A. 예비학습1: 이미지자료 다운로드",
    "text": "A. 예비학습1: 이미지자료 다운로드\n- ref: https://en.wikipedia.org/wiki/Histogram_equalization\n\n!wget https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\nimg = cv2.imread('Unequalized_Hawkes_Bay_NZ.jpg')\n!rm Unequalized_Hawkes_Bay_NZ.jpg\n\n--2023-09-04 11:59:07--  https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\nResolving upload.wikimedia.org (upload.wikimedia.org)... 103.102.166.240, 2001:df2:e500:ed1a::2:b\nConnecting to upload.wikimedia.org (upload.wikimedia.org)|103.102.166.240|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 110895 (108K) [image/jpeg]\nSaving to: ‘Unequalized_Hawkes_Bay_NZ.jpg’\n\nUnequalized_Hawkes_ 100%[===================&gt;] 108.30K   572KB/s    in 0.2s    \n\n2023-09-04 11:59:07 (572 KB/s) - ‘Unequalized_Hawkes_Bay_NZ.jpg’ saved [110895/110895]\n\n\n\n\n!wget 주소: 주소에 있는 이미지를 다운로드\n!rm 파일이름: 현재폴더에 “파일이름”을 삭제\n\n\nplt.imshow(img)\n\n&lt;matplotlib.image.AxesImage at 0x7f52f5c70ed0&gt;\n\n\n\n\n\n\n다운받은 이미지를 보는 방법"
  },
  {
    "objectID": "posts/01wk-1.html#b.-예비학습2-이미지자료의-이해",
    "href": "posts/01wk-1.html#b.-예비학습2-이미지자료의-이해",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "B. 예비학습2: 이미지자료의 이해",
    "text": "B. 예비학습2: 이미지자료의 이해\n\n비밀1: 이미지는 사실 숫자들의 집합이었음.\n- 예시1 – 2d array = 흑백이미지\n\n_img1 = np.array([0,30,90,120,150,180,210,240,255]).reshape(3,3)\n_img1\n\narray([[  0,  30,  90],\n       [120, 150, 180],\n       [210, 240, 255]])\n\n\n\nplt.imshow(_img1,cmap='gray')\nplt.colorbar()\n\n&lt;matplotlib.colorbar.Colorbar at 0x7f385a14c450&gt;\n\n\n\n\n\n- 예시2 – 2d array = 흑백이미지\n\n_img2 = np.array([0,20,40,60,80,100,120,140,160]).reshape(3,3)\n_img2\n\narray([[  0,  20,  40],\n       [ 60,  80, 100],\n       [120, 140, 160]])\n\n\n\nplt.imshow(_img2,cmap='gray',vmin=0,vmax=255)\nplt.colorbar()\n\n&lt;matplotlib.colorbar.Colorbar at 0x7f385a04e590&gt;\n\n\n\n\n\n- 예시3 – 나란히 그리기\n\n_img3 = np.concatenate([_img1,_img2],axis=1)\n_img3\n\narray([[  0,  30,  90,   0,  20,  40],\n       [120, 150, 180,  60,  80, 100],\n       [210, 240, 255, 120, 140, 160]])\n\n\n\nplt.imshow(_img3,cmap='gray')\n\n&lt;matplotlib.image.AxesImage at 0x7f3859fda8d0&gt;\n\n\n\n\n\n\n\n비밀2: 칼라이미지는 red + green + blue 의 조합으로 표현가능 (다른방식도 가능)\n- ref: https://en.wikipedia.org/wiki/RGB_color_model\n\n\n\n그림 ??: 위키에서 긁은 그림, 빛의 3원색을 표현하고 있음\n\n\n- 예시1 – 3d array = 칼라이미지\n\nr = np.array(\n    [[  0,   0,   0,   0,   0],\n     [  0,   0,   0,   0,   0],\n     [255, 255, 255, 255, 255],\n     [255, 255, 255, 255, 255],\n     [255, 255, 255, 255, 255]]\n)\ng = np.array(\n    [[255, 255, 255,  0,   0],\n     [255, 255, 255,  0,   0],\n     [255, 255, 255,  0,   0],\n     [  0,   0,   0,  0,   0],\n     [  0,   0,   0,  0,   0]]\n)\nb = np.array(\n    [[  0,   0, 255, 255, 255],\n     [  0,   0, 255, 255, 255],\n     [  0,   0, 255, 255, 255],\n     [  0,   0,   0,   0,   0],\n     [  0,   0,   0,   0,   0]]\n)\nz = np.array(\n    [[ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0]]\n)    \n\n\nred = np.stack([r,z,z],axis=-1)\ngreen = np.stack([z,g,z],axis=-1)\nblue = np.stack([z,z,b],axis=-1)\n\n\nplt.imshow(red)\n\n&lt;matplotlib.image.AxesImage at 0x7f1c17b5a010&gt;\n\n\n\n\n\n\nplt.imshow(green)\n\n&lt;matplotlib.image.AxesImage at 0x7f1c17909ed0&gt;\n\n\n\n\n\n\nplt.imshow(blue)\n\n&lt;matplotlib.image.AxesImage at 0x7f1c178b1a10&gt;\n\n\n\n\n\n\nplt.imshow(red+green+blue)\n\n&lt;matplotlib.image.AxesImage at 0x7f1c176f1ed0&gt;\n\n\n\n\n\n- 예시2: R,G,B를 같은 비율로 섞으면 다시 흑백이미지가 된다.\n\narr2 = np.array(\n    [[10,  40],\n     [80,  60]]\n)\narr2\n\narray([[10, 40],\n       [80, 60]])\n\n\n\narr3 = np.stack([arr2,arr2,arr2],axis=-1)\nplt.imshow(arr3)\n\n&lt;matplotlib.image.AxesImage at 0x7f52ef74a550&gt;\n\n\n\n\n\n\nplt.imshow(arr2,cmap='gray',vmin=0,vmax=255)\nplt.colorbar()\n\n&lt;matplotlib.colorbar.Colorbar at 0x7f52ef5011d0&gt;"
  },
  {
    "objectID": "posts/01wk-1.html#c.-히스토그램-이퀄라이제이션",
    "href": "posts/01wk-1.html#c.-히스토그램-이퀄라이제이션",
    "title": "01wk-1: 박스플랏, 히스토그램",
    "section": "C. 히스토그램 이퀄라이제이션",
    "text": "C. 히스토그램 이퀄라이제이션\n- 우리가 관심있었던 이미지\n\nplt.imshow(img)\n\n&lt;matplotlib.image.AxesImage at 0x7fd835dd4890&gt;\n\n\n\n\n\n- 이미지를 rgb로 각각 분리하고 각 색깔들의 히스토그램을 그려보자.\n\nr = img[:,:,0]\ng = img[:,:,1]\nb = img[:,:,2]\n\n\nplt.hist(r.reshape(-1),range=(0,255),bins=255);\n\n\n\n\n\n120-200 사이에 값이 몰려있음\n만약에 120-200까지의 분포된 모양은 그대로 유지하면서 range를 0-255 까지 늘린다면?\n\n- cv2.equalizeHist()를 이용하여 분포의 모양은 대략적으로 유지하면서 값을 퍼트리자!\n\nrr = cv2.equalizeHist(r)\ngg = cv2.equalizeHist(g)\nbb = cv2.equalizeHist(b)\n\n\nplt.hist(r.reshape(-1),bins=255, range=[0,255],label='befor');\nplt.hist(rr.reshape(-1),bins=255,range=[0,255],label='after');\nplt.legend()\n\n&lt;matplotlib.legend.Legend at 0x7f52ef3197d0&gt;\n\n\n\n\n\n- 변환이후의 이미지를 그려본다면?\n\nimg2 = np.stack([rr,gg,bb],axis=-1)\n\n\nplt.imshow(img2)\n\n&lt;matplotlib.image.AxesImage at 0x7f52ce3a3810&gt;\n\n\n\n\n\n\nplt.imshow(np.concatenate([img,img2],axis=1))\n\n&lt;matplotlib.image.AxesImage at 0x7f52cde1b290&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#a.-read-data",
    "href": "posts/03wk-1.html#a.-read-data",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "A. read data",
    "text": "A. read data\n- ref: https://r4ds.had.co.nz/index.html\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/mpg.csv')\ndf\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/03wk-1.html#b.-descriptions",
    "href": "posts/03wk-1.html#b.-descriptions",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "B. descriptions",
    "text": "B. descriptions\n- 컬럼들의 이름을 출력.\n\ndf.columns\n\nIndex(['manufacturer', 'model', 'displ', 'year', 'cyl', 'trans', 'drv', 'cty',\n       'hwy', 'fl', 'class'],\n      dtype='object')\n\n\n- ChatGPT에 문의"
  },
  {
    "objectID": "posts/03wk-1.html#a.-xdispl-yhwy",
    "href": "posts/03wk-1.html#a.-xdispl-yhwy",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "A. x=displ, y=hwy",
    "text": "A. x=displ, y=hwy\n- 예시1: 정직하게 매뉴얼대로..\n\nggplot(data=df) + geom_point(mapping=aes(x='displ',y='hwy'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n- 예시2: data=와 mapping=은 생략가능하다.\n\nggplot(df)+geom_point(aes(x='displ',y='hwy'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#b.-rpy2-코랩-아닌-경우-실습금지",
    "href": "posts/03wk-1.html#b.-rpy2-코랩-아닌-경우-실습금지",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "B. rpy2 – 코랩 아닌 경우 실습금지",
    "text": "B. rpy2 – 코랩 아닌 경우 실습금지\n- 예시: R에서도 거의 똑같은 문법으로 그릴수 있음 (1타2피..)\n\nimport rpy2\n%load_ext rpy2.ipython\n\n\n%%R\nlibrary(tidyverse)\ndf = mpg\nggplot(df)+geom_point(aes(x=displ,y=hwy))\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/03wk-1.html#a.-xdispl-yhwy-shapeclass",
    "href": "posts/03wk-1.html#a.-xdispl-yhwy-shapeclass",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "A. x=displ, y=hwy, shape=class",
    "text": "A. x=displ, y=hwy, shape=class\n- 예시1\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',shape='class'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#b.-xdispl-yhwy-colorclass",
    "href": "posts/03wk-1.html#b.-xdispl-yhwy-colorclass",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "B. x=displ, y=hwy, color=class",
    "text": "B. x=displ, y=hwy, color=class\n- 예시1\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='class'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#c.-xdispl-yhwy-colorclass-shapeclass",
    "href": "posts/03wk-1.html#c.-xdispl-yhwy-colorclass-shapeclass",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "C. x=displ, y=hwy, color=class, shape=class",
    "text": "C. x=displ, y=hwy, color=class, shape=class\n- 예시1\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='class',shape='class'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n- 예시2: 전체적으로 size를 크게..\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='class',shape='class'),size=5)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n- 예시3: 겹치는 부분이 있으니 좀 더 투명하게..\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='class',shape='class'),size=5,alpha=0.5)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#a.-xdispl-yhwy-colordrv-shapeclass",
    "href": "posts/03wk-1.html#a.-xdispl-yhwy-colordrv-shapeclass",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "A. x=displ, y=hwy, color=drv, shape=class",
    "text": "A. x=displ, y=hwy, color=drv, shape=class\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='drv',shape='class'),size=5,alpha=0.5)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#b.-xdispl-yhwy-colordrv-shapeclass-sizecyl",
    "href": "posts/03wk-1.html#b.-xdispl-yhwy-colordrv-shapeclass-sizecyl",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "B. x=displ, y=hwy, color=drv, shape=class, size=cyl",
    "text": "B. x=displ, y=hwy, color=drv, shape=class, size=cyl\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='drv',shape='class',size='cyl'),alpha=0.5)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#a.-fig",
    "href": "posts/03wk-1.html#a.-fig",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "A. fig",
    "text": "A. fig\n\nfig = ggplot(df) # ggplot은 클래스, fig는 ggplot에서 찍힌 인스턴스\nfig\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#b.-geom_point",
    "href": "posts/03wk-1.html#b.-geom_point",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "B. geom_point()",
    "text": "B. geom_point()\n\npoint = geom_point(aes(x='displ',y='hwy'))\npoint\n\n&lt;plotnine.geoms.geom_point.geom_point at 0x7f393731b090&gt;\n\n\n\nfig+point\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#c.-geom_smooth",
    "href": "posts/03wk-1.html#c.-geom_smooth",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "C. geom_smooth()",
    "text": "C. geom_smooth()\n\nsmooth = geom_smooth(aes(x='displ',y='hwy'))\n\n\nfig+smooth\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#d.-geom_point-geom_smooth",
    "href": "posts/03wk-1.html#d.-geom_point-geom_smooth",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "D. geom_point() + geom_smooth()",
    "text": "D. geom_point() + geom_smooth()\n\nfig + point + smooth\nggplot(df)+geom_point(aes(x='displ',y='hwy'))+geom_smooth(aes(x='displ',y='hwy'))\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#e.-geom_point-better",
    "href": "posts/03wk-1.html#e.-geom_point-better",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "E. geom_point() – better",
    "text": "E. geom_point() – better\n\n# ggplot(df) + geom_point(aes(x='displ',y='hwy',color='drv',size='cyl'),alpha=0.5)\npoint_better = geom_point(aes(x='displ',y='hwy',color='drv',size='cyl'),alpha=0.5)\n\n\nfig + point_better\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#f.-geom_smooth-better",
    "href": "posts/03wk-1.html#f.-geom_smooth-better",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "F. geom_smooth() – better",
    "text": "F. geom_smooth() – better\n\nfig = ggplot(df) \nsmooth_better = geom_smooth(aes(x='displ',y='hwy',color='drv'),linetype='dashed')\nfig+smooth_better\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#g.-다양한-조합",
    "href": "posts/03wk-1.html#g.-다양한-조합",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "G. 다양한 조합",
    "text": "G. 다양한 조합\n- 예시1: fig, point, smooth\n\nfig + point + smooth\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n- 예시2: fig, point_better, smooth_better\n\nfig + point_better + smooth_better\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n- 예시3: fig, point_better, smooth_better, smooth\n\nfig + point_better + smooth_better + smooth\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#a.-책-읽어보세요",
    "href": "posts/03wk-1.html#a.-책-읽어보세요",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "A. 책 읽어보세요",
    "text": "A. 책 읽어보세요\n- ref: https://product.kyobobook.co.kr/detail/S000000597846\n\n구매할만한 책입니다.\n수업에 필요한 내용은 여기에..\n\n- 내용요약 - 여름 \\(\\to\\) 수영장 \\(\\to\\) 소아마비 - 여름 \\(\\to\\) 아이스크림 - 아이스크림과 소아마비는 상관관계가 높다: 아이스크림 성분중에서 소아마비를 유발하는 유해물질이 있을 것이다 (?)"
  },
  {
    "objectID": "posts/03wk-1.html#b.-기상자료-다운로드",
    "href": "posts/03wk-1.html#b.-기상자료-다운로드",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "B. 기상자료 다운로드",
    "text": "B. 기상자료 다운로드\n- 기상자료 다운로드\n\ntemp=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/temp.csv').iloc[:,3].to_numpy()\n#temp\n\n\nplt.plot(temp) # 이럴때는 ggplot 보다 matplotlib 이 훨씬 편함"
  },
  {
    "objectID": "posts/03wk-1.html#c.-숨은진짜상황1-온도-to-아이스크림-판매량",
    "href": "posts/03wk-1.html#c.-숨은진짜상황1-온도-to-아이스크림-판매량",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "C. 숨은진짜상황1: 온도 \\(\\to\\) 아이스크림 판매량",
    "text": "C. 숨은진짜상황1: 온도 \\(\\to\\) 아이스크림 판매량\n- 아래와 같은 관계를 가정하자.\n\\[\\text{아이스크림 판매량} = 20 + 2 \\times \\text{온도} + \\text{오차}\\]\n\nnp.random.seed(1)\nicecream_sales = 20 + 2 * temp + np.random.randn(len(temp))*10\nplt.plot(temp,icecream_sales,'o',alpha=0.5)"
  },
  {
    "objectID": "posts/03wk-1.html#d.-숨은진짜상황2-온도-to-소아마비-반응수치",
    "href": "posts/03wk-1.html#d.-숨은진짜상황2-온도-to-소아마비-반응수치",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "D. 숨은진짜상황2: 온도 \\(\\to\\) 소아마비 반응수치",
    "text": "D. 숨은진짜상황2: 온도 \\(\\to\\) 소아마비 반응수치\n- 아래와 같은 관계를 가정하자.\n\\[\\text{소아마비 반응수치} = 30 + 0.5 \\times \\text{온도} + \\text{오차}\\]\n\nnp.random.seed(2)\ndisease = 30 + 0.5 * temp + np.random.randn(len(temp))*1\nplt.plot(temp, disease,'o',alpha=0.5)"
  },
  {
    "objectID": "posts/03wk-1.html#e.-우리가-관측한-상황-온도는-은닉되어-있음",
    "href": "posts/03wk-1.html#e.-우리가-관측한-상황-온도는-은닉되어-있음",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "E. 우리가 관측한 상황 (온도는 은닉되어 있음)",
    "text": "E. 우리가 관측한 상황 (온도는 은닉되어 있음)\n\nplt.plot(icecream_sales, disease, 'o', alpha=0.3)"
  },
  {
    "objectID": "posts/03wk-1.html#f.-여름만-뽑아서-플랏한다면",
    "href": "posts/03wk-1.html#f.-여름만-뽑아서-플랏한다면",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "F. 여름만 뽑아서 플랏한다면?",
    "text": "F. 여름만 뽑아서 플랏한다면?\n\nplt.plot(icecream_sales,disease,'o',alpha=0.3)\nplt.plot(icecream_sales[temp&gt;25], disease[temp&gt;25],'o')"
  },
  {
    "objectID": "posts/03wk-1.html#g.-ggplot으로-온도구간을-세분화-하여-시각화하자.",
    "href": "posts/03wk-1.html#g.-ggplot으로-온도구간을-세분화-하여-시각화하자.",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "G. ggplot으로 온도구간을 세분화 하여 시각화하자.",
    "text": "G. ggplot으로 온도구간을 세분화 하여 시각화하자.\n- 데이터를 데이터프레임으로\n\ndf = pd.DataFrame({'temp':temp, 'ice':icecream_sales, 'dis':disease})\ndf\n\n\n\n\n\n\n\n\ntemp\nice\ndis\n\n\n\n\n0\n-0.5\n35.243454\n29.333242\n\n\n1\n1.4\n16.682436\n30.643733\n\n\n2\n2.6\n19.918282\n29.163804\n\n\n3\n2.0\n13.270314\n32.640271\n\n\n4\n2.5\n33.654076\n29.456564\n\n\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.633906\n\n\n652\n20.4\n76.554679\n38.920443\n\n\n653\n18.3\n68.666079\n39.882650\n\n\n654\n12.8\n42.771364\n36.613159\n\n\n655\n6.7\n30.736731\n34.902513\n\n\n\n\n656 rows × 3 columns\n\n\n\n- 구간별로 나눈변수를 추가\n\ndf.assign(temp_cut = pd.cut(df.temp,bins=5)) \n\n\n\n\n\n\n\n\ntemp\nice\ndis\ntemp_cut\n\n\n\n\n0\n-0.5\n35.243454\n29.333242\n(-3.92, 4.56]\n\n\n1\n1.4\n16.682436\n30.643733\n(-3.92, 4.56]\n\n\n2\n2.6\n19.918282\n29.163804\n(-3.92, 4.56]\n\n\n3\n2.0\n13.270314\n32.640271\n(-3.92, 4.56]\n\n\n4\n2.5\n33.654076\n29.456564\n(-3.92, 4.56]\n\n\n...\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.633906\n(13.04, 21.52]\n\n\n652\n20.4\n76.554679\n38.920443\n(13.04, 21.52]\n\n\n653\n18.3\n68.666079\n39.882650\n(13.04, 21.52]\n\n\n654\n12.8\n42.771364\n36.613159\n(4.56, 13.04]\n\n\n655\n6.7\n30.736731\n34.902513\n(4.56, 13.04]\n\n\n\n\n656 rows × 4 columns\n\n\n\n- 시각화\n\nfig = ggplot(df.assign(temp_cut = pd.cut(df.temp,bins=7))) \npoint = geom_point(aes(x='ice',y='dis',color='temp_cut'),alpha=0.2)\nsmooth = geom_smooth(aes(x='ice',y='dis',color='temp_cut'),linetype='dashed')\nfig +point+ smooth\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#h.-진짜-아이스크림을-먹고-배탈이-났다면",
    "href": "posts/03wk-1.html#h.-진짜-아이스크림을-먹고-배탈이-났다면",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "H. 진짜 아이스크림을 먹고 배탈이 났다면?",
    "text": "H. 진짜 아이스크림을 먹고 배탈이 났다면?\n- 온도는 아이스크림 판매에 여전히 영향을 주지만\n\\[\\text{아이스크림 판매량} = 20 + 2 \\times \\text{온도} + \\text{오차}\\]\n\nnp.random.seed(1)\nicecream_sales = 20 + 2 * temp + np.random.randn(len(temp))*10\n\n- 수영장이 원인이 아니라 진짜 아이스크림을 먹고 소아마비에 걸린상황이라면?\n\\[\\text{소아마비 반응수치} = 30 + 0.0 \\times \\text{온도} + 0.15 \\times \\text{아이스크림 판매량} + \\text{오차}\\]\n\nnp.random.seed(2) \ndisease= 30+ 0*temp + 0.15*icecream_sales + np.random.randn(len(temp))*1\n\n- 그림을 한번 그려보자.\n\ndf2 = pd.DataFrame({'temp':temp,'ice':icecream_sales,'dis':disease})\ndf2.assign(temp_cut=pd.cut(df2.temp,bins=7))\n\n\n\n\n\n\n\n\ntemp\nice\ndis\ntemp_cut\n\n\n\n\n0\n-0.5\n35.243454\n34.869760\n(-6.343, -0.286]\n\n\n1\n1.4\n16.682436\n32.446099\n(-0.286, 5.771]\n\n\n2\n2.6\n19.918282\n30.851546\n(-0.286, 5.771]\n\n\n3\n2.0\n13.270314\n33.630818\n(-0.286, 5.771]\n\n\n4\n2.5\n33.654076\n33.254676\n(-0.286, 5.771]\n\n\n...\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n40.009905\n(17.886, 23.943]\n\n\n652\n20.4\n76.554679\n40.203645\n(17.886, 23.943]\n\n\n653\n18.3\n68.666079\n41.032562\n(17.886, 23.943]\n\n\n654\n12.8\n42.771364\n36.628863\n(11.829, 17.886]\n\n\n655\n6.7\n30.736731\n36.163023\n(5.771, 11.829]\n\n\n\n\n656 rows × 4 columns\n\n\n\n\nfig = ggplot(df2.assign(temp_cut = pd.cut(df2.temp,bins=7))) \npoint = geom_point(aes(x='ice',y='dis',color='temp_cut'),alpha=0.2)\nsmooth = geom_smooth(aes(x='ice',y='dis',color='temp_cut'),linetype='dashed')\nfig + point + smooth\n\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/home/cgb2/anaconda3/envs/r/lib/python3.11/site-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "posts/03wk-1.html#i.-해석",
    "href": "posts/03wk-1.html#i.-해석",
    "title": "03wk-1: plotnine, 아이스크림을 많이 먹으면 걸리는 병",
    "section": "I. 해석",
    "text": "I. 해석\n- 해피앤딩: 아이스크림 먹어도 소아마비 안걸려!\n\n아이스크림을 먹으면 소아마비를 유발한다는 이상한 결론이 나올뻔 했음.\n하지만 우리는 온도라는 흑막1을 잘 찾았고 결과적으로 “온도-&gt;아이스크림판매량,소아마비” 이라는 합리적인 진리를 얻을 수 있었다.\n\n1 우리는 이것을 “은닉변수”라고 부르기로 했어요- 걱정: 또 다른 흑막?\n\n고려할 흑막이 온도뿐이라는 보장이 어디있지?\n사실 흑막2, 흑막3이 있어서 그런 흑막들을 고려하다보니까 아이스크림과 소아마비사이의 상관관계가 다시 보인다면?\n\n- 이론:\n\n이론적으로는 “세상의 모든 은닉변수를 통제하였을 경우에도 corr(X,Y)의 값이 1에 가깝다면 그때는 인과성이 있음” 이라고 주장할 수 있다.2\n즉 모든 흑막을 제거한다면 “상관성=인과성”이다.\n\n2 물론 이 경우에도 무엇이 원인인지는 통계적으로 따지는 것은 불가- 회의론:\n\n세상의 모든 흑막을 제거하는건 사실상 불가능하지 않나?\n\n- 두 가지 연구흐름\n\n실험계획법: 실험계획을 잘하면 흑막을 제거한 효과가 있음.3\n인과추론: 실험계획이 사실상 불가능한 경우가 있음 \\(\\to\\) 모인 데이터에서 최대한 흑막2,3,4,.. 등이 비슷한 그룹끼리 “매칭”을 시킨다!\n\n3 무작위로 사람뽑아서 담배를 피우게 한다든가"
  },
  {
    "objectID": "posts/01wk-2.html#a.-기본플랏",
    "href": "posts/01wk-2.html#a.-기본플랏",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "A. 기본플랏",
    "text": "A. 기본플랏\n\nplt.plot([1,2,3,2])"
  },
  {
    "objectID": "posts/01wk-2.html#b.-모양변경",
    "href": "posts/01wk-2.html#b.-모양변경",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "B. 모양변경",
    "text": "B. 모양변경\n\nplt.plot([1,2,3,2],'--')"
  },
  {
    "objectID": "posts/01wk-2.html#c.-색상변경",
    "href": "posts/01wk-2.html#c.-색상변경",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "C. 색상변경",
    "text": "C. 색상변경\n- 예시1\n\nplt.plot([1,2,3,2],'r')\n\n\n\n\n- 예시2\n\nplt.plot([1,2,3,2],'b')"
  },
  {
    "objectID": "posts/01wk-2.html#d.-모양-색상변경",
    "href": "posts/01wk-2.html#d.-모양-색상변경",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "D. 모양 + 색상변경",
    "text": "D. 모양 + 색상변경\n- 예시1\n\nplt.plot([1,2,3,2],'--r')\n\n\n\n\n- 예시2: 순서변경 가능\n\nplt.plot([1,2,3,2],'r--')"
  },
  {
    "objectID": "posts/01wk-2.html#e.-원리",
    "href": "posts/01wk-2.html#e.-원리",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "E. 원리?",
    "text": "E. 원리?\n- r--등의 옵션은 Markers + Line Styles + Colors 의 조합으로 표현가능\nref: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html\n\n--r: 점선(dashed)스타일 + 빨간색\nr--: 빨간색 + 점선(dashed)스타일\n:k: 점선(dotted)스타일 + 검은색\nk:: 검은색 + 점선(dotted)스타일\n\n- 우선 Marker를 무시하면 Line Styles + Color로 표현가능한 조합은 \\(4\\times 8=32\\) 개\n\nLine StylesColorsMarkers\n\n\n\n\n\ncharacter\ndescription\n\n\n\n\n‘-’\nsolid line style\n\n\n‘–’\ndashed line style\n\n\n‘-.’\ndash-dot line style\n\n\n‘:’\ndotted line style\n\n\n\n\n\n\n\n\ncharacter\ncolor\n\n\n\n\n‘b’\nblue\n\n\n‘g’\ngreen\n\n\n‘r’\nred\n\n\n‘c’\ncyan\n\n\n‘m’\nmagenta\n\n\n‘y’\nyellow\n\n\n‘k’\nblack\n\n\n‘w’\nwhite\n\n\n\n\n\n\n\n\ncharacter\ndescription\n\n\n\n\n‘.’\npoint marker\n\n\n‘,’\npixel marker\n\n\n‘o’\ncircle marker\n\n\n‘v’\ntriangle_down marker\n\n\n‘^’\ntriangle_up marker\n\n\n‘&lt;’\ntriangle_left marker\n\n\n‘&gt;’\ntriangle_right marker\n\n\n‘1’\ntri_down marker\n\n\n‘2’\ntri_up marker\n\n\n‘3’\ntri_left marker\n\n\n‘4’\ntri_right marker\n\n\n‘8’\noctagon marker\n\n\n‘s’\nsquare marker\n\n\n‘p’\npentagon marker\n\n\n‘P’\nplus (filled) marker\n\n\n’*’\nstar marker\n\n\n‘h’\nhexagon1 marker\n\n\n‘H’\nhexagon2 marker\n\n\n‘+’\nplus marker\n\n\n‘x’\nx marker\n\n\n‘X’\nx (filled) marker\n\n\n‘D’\ndiamond marker\n\n\n‘d’\nthin_diamond marker\n\n\n‘|’\nvline marker\n\n\n’_’\nhline marker\n\n\n\n\n\n\n- 예시1\n\nplt.plot([1,2,4,3],'b-.')\n\n\n\n\n- 예시2\n\nplt.plot([1,2,4,3],'k:')\n\n\n\n\n- 예시3: line style + color 조합으로 사용하든 color + line style 조합으로 사용하든 상관없음\n\nplt.plot([1,2,4,3],'-.b')\n\n\n\n\n\nplt.plot([1,2,4,3],':k')\n\n\n\n\n- 예시4: line style을 중복으로 사용하거나 color를 중복으로 쓸 수 는 없다.\n\nplt.plot([1,2,4,3],'br')\n\nValueError: 'br' is not a valid format string (two color symbols)\n\n\n\n\n\n- 예시5: 색이 사실 8개만 있는건 아니다.\nref: https://matplotlib.org/2.0.2/examples/color/named_colors.html\n\nplt.plot([1,2,4,3],color='lime')\n\n\n\n\n- 예시6: 색을 바꾸려면 hex코드를 넣는 방법이 젤 깔끔함\nref: https://htmlcolorcodes.com/\n\nplt.plot([1,2,4,3],color='#7E277E')\n\n\n\n\n- 예시7: 당연히 라인스타일도 4개만 있진 않음\nref: https://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html\n\nplt.plot([1,2,4,3],linestyle=(0, (10, 1)))"
  },
  {
    "objectID": "posts/01wk-2.html#a.-원리",
    "href": "posts/01wk-2.html#a.-원리",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "A. 원리",
    "text": "A. 원리\n- 그냥 마커를 설정하면 끝!\n\nplt.plot(x,y,'o')"
  },
  {
    "objectID": "posts/01wk-2.html#b.-기본플랏",
    "href": "posts/01wk-2.html#b.-기본플랏",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "B. 기본플랏",
    "text": "B. 기본플랏\n- 예시1\n\nplt.plot([1,2,4,3],'x')\n\n\n\n\n- 예시2\n\nplt.plot([1,2,4,3],'D')"
  },
  {
    "objectID": "posts/01wk-2.html#c.-색깔변경",
    "href": "posts/01wk-2.html#c.-색깔변경",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "C. 색깔변경",
    "text": "C. 색깔변경\n- 예시1\n\nplt.plot(x,y,'or')\n\n\n\n\n- 예시2\n\nplt.plot(x,y,'db')\n\n\n\n\n- 예시3\n\nplt.plot(x,y,'bx')"
  },
  {
    "objectID": "posts/01wk-2.html#d.-dot-connected-plot",
    "href": "posts/01wk-2.html#d.-dot-connected-plot",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "D. dot-connected plot",
    "text": "D. dot-connected plot\n- 예시1: 마커와 라인스타일을 동시에 사용하면 dot-connected plot이 된다.\n\nplt.plot([1,2,4,3],'--o')\n\n\n\n\n- 예시2: 당연히 색도 적용가능함\n\nplt.plot([1,2,4,3],'--or')\n\n\n\n\n- 예시3: 서로 순서를 바꿔도 상관없다.\n\nplt.plot([1,2,4,3],'r--o')\n\n\n\n\n- 예시4: 색만 따로 바꾸고싶다면?\n\nplt.plot([1,2,4,3],'--o',color='lime')"
  },
  {
    "objectID": "posts/01wk-2.html#a.-예비학습",
    "href": "posts/01wk-2.html#a.-예비학습",
    "title": "01wk-2: 라인플랏, 산점도, 객체지향적 시각화 (1)",
    "section": "A. 예비학습",
    "text": "A. 예비학습\n# 예비학습1 – 그림을 저장했다가 꺼내보고 싶다.\n- 그림을 그리고 저장하자.\n\nplt.plot([1,2,4,3])\nfig = plt.gcf()\n\n\n\n\n- 다른그림을 그려보자.\n\nplt.plot([1,2,4,3],'--o')\n\n\n\n\n- 저장한 그림은 언제든지 꺼내볼 수 있음\n\nfig\n\n\n\n\n#\n# 예비학습2 – fig 는 뭐야?\n\n#fig??\ntype(fig)\n\nmatplotlib.figure.Figure\n\n\n\nFigure라는 클래스에서 찍힌 인스턴스\n\n- 여러가지 값, 기능이 저장되어 있겠음.\n\nfig.axes\n\n[&lt;Axes: &gt;]\n\n\n\nax = fig.axes[0]\n\n\nyaxis= ax.yaxis\nxaxis= ax.xaxis\n\n\nlines = ax.get_lines()\nline = lines[0]\n\n- 계층구조: Figure \\(\\supset\\) [Axes,…] \\(\\supset\\) YAxis, XAxis, [Line2D,…]\n\ntype(fig)\n\nmatplotlib.figure.Figure\n\n\n1. .axes 로 Axes 를 끄집어냄\n\nax = fig.axes[0]\ntype(ax)\n\nmatplotlib.axes._axes.Axes\n\n\n2. .xaxis, .yaxis 로 Axis 를 끄집어냄\n\nyaxis = ax.yaxis\nxaxis = ax.xaxis\ntype(yaxis), type(xaxis)\n\n(matplotlib.axis.YAxis, matplotlib.axis.XAxis)\n\n\n3. .get_lines()로 Line2D를 끄집어냄\n\nlines = ax.get_lines()\nline=lines[0]\ntype(line)\n\nmatplotlib.lines.Line2D\n\n\n- 오브젝트내용 확인 (그닥 필요 없음)\n\nline.properties()['data']\n\n(array([0., 1., 2., 3.]), array([1, 2, 4, 3]))\n\n\n- matplotlib의 설명\nref: https://matplotlib.org/stable/gallery/showcase/anatomy.html#sphx-glr-gallery-showcase-anatomy-py"
  },
  {
    "objectID": "posts/02wk-2.html#a.-애드워드-터프티",
    "href": "posts/02wk-2.html#a.-애드워드-터프티",
    "title": "02wk-2: Seaborn 간략한 소개, 훌륭한 시각화",
    "section": "A. 애드워드 터프티",
    "text": "A. 애드워드 터프티\n- 데이터 시각화계의 거장\n- 터프티의 이론중 백미: 엄격한 미니멀리즘\n\n최소한의 잉크로 많은 정보를 전달할 수 있다면 그것이 바로 좋은 그래프이다.\n작은 지면 내에서 잉크를 최대한 적게 써서 짧은 시간 안에 많은 영감을 주어야 한다.\n\n- 데이터-잉크비: 데이터를 표현하는데 들아가는 잉크의 양 / 그래픽을 인쇄하는데 들어가는 잉크의 총량\n- 차트정크 (나이젤홈즈의 그래프)\n\n\n“Lurking behind chartjunk is contempt both for information and for the audience. Chartjunk promoters imagine that numbers and details are boring, dull, and tedious, requiring ornament to enliven. Cosmetic decoration, which frequently distorts the data, will never salvage an underlying lack of content. If the numbers are boring, then you’ve got the wrong numbers (…) Worse is contempt for our audience, designing as if readers were obtuse and uncaring. In fact, consumers of graphics are often more intelligent about the information at hand than those who fabricate the data decoration (…) The operating moral premise of information design should be that our readers are alert and caring; they may be busy, eager to get on with it, but they are not stupid.”\n\n\n차트정크 = 대중을 멸시 + 데이터에 대한 모독\n차트정크 옹호가는 숫자와 데이터가 지루하여 활기가 필요하다고 생각하는 모양이다..\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 제 생각: 글쎄…"
  },
  {
    "objectID": "posts/02wk-2.html#b.-찰스미나드의-도표",
    "href": "posts/02wk-2.html#b.-찰스미나드의-도표",
    "title": "02wk-2: Seaborn 간략한 소개, 훌륭한 시각화",
    "section": "B. 찰스미나드의 도표",
    "text": "B. 찰스미나드의 도표\n\n인류역사상 가장 훌륭한 시각화\n\n\n- 터프티의 평\n\n지금까지 그려진 최고의 통계 그래픽일지도 모른다.\n여기에서는 군대의 크기, 2차원 평면상의 위치, 군대의 이동방향, 모스코바에서 퇴각하는 동안의 여러날짜, 온도 \\(\\to\\) 6차원의 변수\n백만번에 한번 이런 그림을 그릴수는 있겠지만 이러한 멋진 그래픽을 만드는 방법에 대한 원칙은 없다. \\(\\to\\) 미니멀리즘..\n\n- 왜 우수한 그래프일까?\n\n자료를 파악하는 기법은 최근까지도 산점도, 막대그래프, 라인플랏에 의존\n이러한 플랏의 단점은 고차원의 자료를 분석하기 어렵다는 것임\n미나드는 여러그림을 그리는 방법 대신에 한 그림에서 패널을 늘리는 방법을 선택함."
  },
  {
    "objectID": "posts/02wk-2.html#c.-미나드처럼-그리는게-왜-어려운가",
    "href": "posts/02wk-2.html#c.-미나드처럼-그리는게-왜-어려운가",
    "title": "02wk-2: Seaborn 간략한 소개, 훌륭한 시각화",
    "section": "C. 미나드처럼 그리는게 왜 어려운가?",
    "text": "C. 미나드처럼 그리는게 왜 어려운가?\n- 몸무게, 키, 성별, 국적\n\ndf1=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/male1.csv')\ndf2=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/male2.csv')  \ndf3=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/female.csv') \ndf4=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/foreign.csv')\n\n- 미나드의 접근방법\n\n_df = pd.concat([pd.concat([df1,df2],axis=1).assign(g='m'),df3.assign(g='f')])\ndf = pd.concat([_df.assign(g2='korea'),df4.assign(g2='foreign')]).reset_index(drop=True)\ndf\n\n\n\n\n\n\n\n\nw\nh\ng\ng2\n\n\n\n\n0\n72.788217\n183.486773\nm\nkorea\n\n\n1\n66.606430\n173.599877\nm\nkorea\n\n\n2\n69.806324\n173.237903\nm\nkorea\n\n\n3\n67.449439\n173.223805\nm\nkorea\n\n\n4\n70.463183\n174.931946\nm\nkorea\n\n\n...\n...\n...\n...\n...\n\n\n1525\n78.154632\n188.324350\nm\nforeign\n\n\n1526\n74.754308\n183.017979\nf\nforeign\n\n\n1527\n91.196208\n190.100456\nm\nforeign\n\n\n1528\n87.770394\n187.987255\nm\nforeign\n\n\n1529\n88.021995\n193.456798\nm\nforeign\n\n\n\n\n1530 rows × 4 columns\n\n\n\n\nsns.scatterplot(\n    data=df,\n    x='w',\n    y='h',\n    hue='g',\n    style='g2'\n)\n\n&lt;Axes: xlabel='w', ylabel='h'&gt;\n\n\n\n\n\n- 어려운 점:\n\n센스부족: 센스가 없어서 hue/style을 이용하여 그룹을 구분할 생각을 못함\n개념부족: 타이디데이터 (=tidy dataframe, long form dataframe) 형태로 데이터를 정리할 생각을 못함\n코딩못함: 타이디데이터로 데이터를 변형하는 코드를 모름\n\n- 해결하는 방법:\n\n센스부족: 훌륭한 시각화를 많이 보면 해결할 수 있음.\n개념부족: tidydata에 대한 개념을 배우면 해결할 수 있음.\n코딩못함: 코딩공부열심히 (시각화 코드가 중요한게 아니고, pandas를 엄청 잘해야함)"
  },
  {
    "objectID": "posts/02wk-1.html#a.-예비학습",
    "href": "posts/02wk-1.html#a.-예비학습",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "A. 예비학습",
    "text": "A. 예비학습\n# 예비학습1 – 그림을 저장했다가 꺼내보고 싶다.\n- 그림을 그리고 저장하자.\n\nplt.plot([1,2,4,3])\nfig = plt.gcf()\n\n\n\n\n- 다른그림을 그려보자.\n\nplt.plot([1,2,4,3],'--o')\n\n\n\n\n- 저장한 그림은 언제든지 꺼내볼 수 있음\n\nfig\n\n\n\n\n#\n# 예비학습2 – fig 는 뭐야?\n\n#fig??\ntype(fig)\n\nmatplotlib.figure.Figure\n\n\n\nFigure라는 클래스에서 찍힌 인스턴스\n\n- 여러가지 값, 기능이 저장되어 있겠음.\n\nfig.axes\n\n[&lt;Axes: &gt;]\n\n\n\nax = fig.axes[0]\n\n\nyaxis= ax.yaxis\nxaxis= ax.xaxis\n\n\nlines = ax.get_lines()\nline = lines[0]\n\n- 계층구조: Figure \\(\\supset\\) [Axes,…] \\(\\supset\\) YAxis, XAxis, [Line2D,…]\n\ntype(fig)\n\nmatplotlib.figure.Figure\n\n\n1. .axes 로 Axes 를 끄집어냄\n\nax = fig.axes[0]\ntype(ax)\n\nmatplotlib.axes._axes.Axes\n\n\n2. .xaxis, .yaxis 로 Axis 를 끄집어냄\n\nyaxis = ax.yaxis\nxaxis = ax.xaxis\ntype(yaxis), type(xaxis)\n\n(matplotlib.axis.YAxis, matplotlib.axis.XAxis)\n\n\n3. .get_lines()로 Line2D를 끄집어냄\n\nlines = ax.get_lines()\nline=lines[0]\ntype(line)\n\nmatplotlib.lines.Line2D\n\n\n- 오브젝트내용 확인 (그닥 필요 없음)\n\nline.properties()['data']\n\n(array([0., 1., 2., 3.]), array([1, 2, 4, 3]))\n\n\n- matplotlib의 설명\nref: https://matplotlib.org/stable/gallery/showcase/anatomy.html#sphx-glr-gallery-showcase-anatomy-py"
  },
  {
    "objectID": "posts/02wk-1.html#b.-plt.plot-쓰지-않고-그림그리기",
    "href": "posts/02wk-1.html#b.-plt.plot-쓰지-않고-그림그리기",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "B. plt.plot 쓰지 않고 그림그리기",
    "text": "B. plt.plot 쓰지 않고 그림그리기\n- 개념:\n\nFigure(fig): 도화지\nAxes(ax): 도화지에 존재하는 그림틀\nAxis, Lines: 그림틀 위에 올려지는 물체(object)\n\n- 목표: 아래와 똑같은 그림을 plt.plot()을 쓰지 않고 만든다.\n\nplt.plot([1,2,3,2],'--o')\n\n\n\n\n- 아래와 같이 하면 된다.\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.set_xlim([-0.15, 3.15])\nax.set_ylim([0.9, 3.1])\nline = matplotlib.lines.Line2D(\n    xdata=[0,1,2,3],\n    ydata=[1,2,3,2],\n    linestyle='--',\n    marker='o'\n)\nax.add_line(line)\nfig\n\n\n\n\n\nFigure\n\nfig = plt.Figure() \n\n\n클래스를 모른다면: plt.Figure()는 도화지를 만드는 함수라 생각할 수 있음\n클래스문법에 익숙하다면: 이 과정은 사실 클래스 -&gt; 인스턴스의 과정임 (plt라는 모듈안에 Figure라는 클래스가 있는데, 그 클래스에서 인스턴스를 만드는 과정임)\n\n\nfig\n\n&lt;Figure size 450x300 with 0 Axes&gt;\n\n\n\n아직은 아무것도 없음\n\n\n\nAxes\n\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\n\n\nfig.add_axes는 fig에 소속된 함수이며, 도화지에서 그림틀을 ‘추가하는’ 함수이다.\n\n\nfig\n\n\n\n\n\n이제 fig라는 이름의 도화지에는 추가된 그림틀이 보인다.\n\n\n\nAxes 조정\n\nax.set_xlim([-0.15, 3.15])\nax.set_ylim([0.9, 3.1])\n\n(0.9, 3.1)\n\n\n\nfig\n\n\n\n\n\n\nLines\n\nline = matplotlib.lines.Line2D(\n    xdata=[0,1,2,3], \n    ydata=[1,2,3,2], \n    linestyle='--', \n    marker='o'\n)\n\n\nax.add_line(line)\n\n&lt;matplotlib.lines.Line2D at 0x7f0f726a4310&gt;\n\n\n\nfig\n\n\n\n\n\nfig\n\n\n\n\n\n\n다른방법들\n- 조금 다른 방법: Line2d 오브젝트를 쓰지 않는 방법\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2],'--o')\nfig\n\n\n\n\n- 조금 다른 방법 (2): add_axes()를 쓰지 않는 방법\n\nfig = plt.Figure()\nax = fig.subplots(1)\nax.plot([1,2,3,2],'--o')\nfig\n\n\n\n\n- 좀 더 다른 방법 (3)\n\nfig, ax = plt.subplots(1)\nax.plot([1,2,3,2],'--o')"
  },
  {
    "objectID": "posts/02wk-1.html#c.-정리-starstarstar",
    "href": "posts/02wk-1.html#c.-정리-starstarstar",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "C. 정리 (\\(\\star\\star\\star\\))",
    "text": "C. 정리 (\\(\\star\\star\\star\\))\n- 결국 아래는 모두 같은 코드이다.\n\n## 코드1 \nplt.plot([1,2,3,2],'--o')\n\n\n\n\n\n## 코드2\nfig,ax = plt.subplots()\nax.plot([1,2,3,2],'--o')\n\n\n\n\n\n## 코드3\nfig = plt.Figure()\nax = fig.subplots()\nax.plot([1,2,3,2],'--o')\nfig\n\n\n\n\n\n## 코드4\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2],'--o')\nfig\n\n\n\n\n\n## 코드5\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.set_xlim([-0.15, 3.15])\nax.set_ylim([0.9, 3.1])\nline = matplotlib.lines.Line2D(\n    xdata=[0,1,2,3], \n    ydata=[1,2,3,2], \n    linestyle='--', \n    marker='o'\n)\nax.add_line(line)\nfig"
  },
  {
    "objectID": "posts/02wk-1.html#d.-미니맵",
    "href": "posts/02wk-1.html#d.-미니맵",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "D. 미니맵",
    "text": "D. 미니맵\n- 틀잡기\n\nfig = plt.Figure()\nax = fig.add_axes([0,0,2,2])\nax_mini = fig.add_axes([1.4,0.2,0.5,0.5])\nfig\n\n\n\n\n\nax.plot([1,5,3,4],'--o')\nax_mini.plot([1,2,3,1],'--or')\nfig"
  },
  {
    "objectID": "posts/02wk-1.html#a.-plt.subplots",
    "href": "posts/02wk-1.html#a.-plt.subplots",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "A. plt.subplots()",
    "text": "A. plt.subplots()\n- 예시1\n\n# fig, axs = plt.subplots(2) \nfig, (ax1,ax2) = plt.subplots(2,figsize=(4,4))\nax1.plot([1,2,3,2],'--r')\nax2.plot([1,2,4,3],'--o')\nfig.tight_layout()\n# plt.tight_layout()\n\n\n\n\n- 예시2\n\nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2, figsize=(4,4))\nax1.plot([1,2,4,3],'o', color='C0')\nax2.plot([1,2,4,3],'o', color='C1')\nax3.plot([1,2,4,3],'o', color='C2')\nax4.plot([1,2,4,3],'o', color='C3')\nfig.tight_layout()"
  },
  {
    "objectID": "posts/02wk-1.html#b.-plt.subplot",
    "href": "posts/02wk-1.html#b.-plt.subplot",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "B. plt.subplot()",
    "text": "B. plt.subplot()\n- 예시1\n\nplt.figure(figsize=(4,4))\nplt.subplot(2,2,1)\nplt.plot([1,2,4,3],'o', color='C0')\nplt.subplot(2,2,2)\nplt.plot([1,2,4,3],'o', color='C1')\nplt.subplot(2,2,3)\nplt.plot([1,2,4,3],'o', color='C2')\nplt.subplot(2,2,4)\nplt.plot([1,2,4,3],'o', color='C3')\nplt.tight_layout()"
  },
  {
    "objectID": "posts/02wk-1.html#a.-일반적인-플랏",
    "href": "posts/02wk-1.html#a.-일반적인-플랏",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "A. 일반적인 플랏",
    "text": "A. 일반적인 플랏\n\nplt\n\nplt.plot([1,2,3,2])\nplt.title('asdf')\n\nText(0.5, 1.0, 'asdf')\n\n\n\n\n\n\nplt.title??\n\n\nSignature: plt.title(label, fontdict=None, loc=None, pad=None, *, y=None, **kwargs)\nDocstring:\nSet a title for the Axes.\nSet one of the three available Axes titles. The available titles\nare positioned above the Axes in the center, flush with the left\nedge, and flush with the right edge.\nParameters\n----------\nlabel : str\n    Text to use for the title\nfontdict : dict\n    A dictionary controlling the appearance of the title text,\n    the default *fontdict* is::\n       {'fontsize': rcParams['axes.titlesize'],\n        'fontweight': rcParams['axes.titleweight'],\n        'color': rcParams['axes.titlecolor'],\n        'verticalalignment': 'baseline',\n        'horizontalalignment': loc}\nloc : {'center', 'left', 'right'}, default: :rc:`axes.titlelocation`\n    Which title to set.\ny : float, default: :rc:`axes.titley`\n    Vertical Axes location for the title (1.0 is the top).  If\n    None (the default) and :rc:`axes.titley` is also None, y is\n    determined automatically to avoid decorators on the Axes.\npad : float, default: :rc:`axes.titlepad`\n    The offset of the title from the top of the Axes, in points.\nReturns\n-------\n`.Text`\n    The matplotlib text instance representing the title\nOther Parameters\n----------------\n**kwargs : `~matplotlib.text.Text` properties\n    Other keyword arguments are text properties, see `.Text` for a list\n    of valid text properties.\nSource:   \n@_copy_docstring_and_deprecators(Axes.set_title)\ndef title(label, fontdict=None, loc=None, pad=None, *, y=None, **kwargs):\n    return gca().set_title(\n        label, fontdict=fontdict, loc=loc, pad=pad, y=y, **kwargs)\nFile:      ~/anaconda3/envs/mp/lib/python3.10/site-packages/matplotlib/pyplot.py\nType:      function\n\n\n\n\n\nfig – 원래는 불가능\n\nplt.plot([1,2,3,2])\nfig = plt.gcf()\nfig.suptitle(\"asdf\")\n\nText(0.5, 0.98, 'asdf')\n\n\n\n\n\n\n\nax\n\nplt.plot([1,2,3,2])\nax = plt.gca()\nax.set_title(\"asdf\")\n\nText(0.5, 1.0, 'asdf')"
  },
  {
    "objectID": "posts/02wk-1.html#b.-서브플랏",
    "href": "posts/02wk-1.html#b.-서브플랏",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "B. 서브플랏",
    "text": "B. 서브플랏\n\nax\n\nfig,(ax1,ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nfig.tight_layout()\n\n\n\n\n\n\nplt\n\nplt.subplot(121)\nplt.plot([1,2,3])\nplt.title('asdf')\nplt.subplot(122)\nplt.plot([1,2,1])\nplt.title('1234')\nplt.tight_layout()\n\n\n\n\n\n\nfig\n\nfig,(ax1,ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nfig.suptitle('asdf1234')\nfig.tight_layout()"
  },
  {
    "objectID": "posts/02wk-1.html#a.-motivating-ex",
    "href": "posts/02wk-1.html#a.-motivating-ex",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "A. motivating EX",
    "text": "A. motivating EX\n# 예제 – 키와 몸무게의 산점도\n- 아래와 같은 자료를 수집하였다고 하자.\n\n몸무게 = [44,48,49,58,62,68,69,70,76,79]\n키 = [159,160,162,165,167,162,165,175,165,172]\n\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n\nplt.plot(x,y,'o')\n\n\n\n\n\n키가 큰 사람일수록 몸무게도 많이 나간다. (반대도 성립)\n키와 몸무게는 관계가 있어보인다. (정비례)\n\n- 얼만큼 정비례인지?\n\n이 질문에 대답하기 위해서는 상관계수의 개념을 알아야 한다.\n상관계수는 산점도의 해석에서 가장 중요한 개념 중 하나.\n\n#"
  },
  {
    "objectID": "posts/02wk-1.html#b.-예비학습-상관계수",
    "href": "posts/02wk-1.html#b.-예비학습-상관계수",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "B. 예비학습 – 상관계수",
    "text": "B. 예비학습 – 상관계수\n# 예제 – 키와 몸무게에서 상관계수\n- 다시 아래의 자료를 고려하자.\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n- (표본)상관계수\n\\[r=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})(y_i-\\bar{y}) }{\\sqrt{\\sum_{i=1}^{n}(x_i-\\bar{x})^2\\sum_{i=1}^{n}(y_i-\\bar{y})^2 }}=\\sum_{i=1}^{n}\\tilde{x}_i\\tilde{y}_i \\]\n\n단, \\(\\tilde{x}_i=\\frac{(x_i-\\bar{x})}{\\sqrt{\\sum_{i=1}^n(x_i-\\bar{x})^2}}\\), \\(\\tilde{y}_i=\\frac{(y_i-\\bar{y})}{\\sqrt{\\sum_{i=1}^n(y_i-\\bar{y})^2}}\\)\n\n- 상관계수를 계산하는 방법\n(원래자료)\n\nx,y\n\n([44, 48, 49, 58, 62, 68, 69, 70, 76, 79],\n [159, 160, 162, 165, 167, 162, 165, 175, 165, 172])\n\n\n(평균을 0으로)\n\nxx = x-np.mean(x)\nyy = y-np.mean(y) \n\n(퍼진정도를 표준화)\n\nxxx = xx/np.sqrt(np.sum(xx**2))\nyyy = yy/np.sqrt(np.sum(yy**2))\n\n\n(xxx*yyy).sum()\n\n0.7138620583559141\n\n\n- 상관계수를 계산하는 방법2\n\nnp.corrcoef(x,y)\n\narray([[1.        , 0.71386206],\n       [0.71386206, 1.        ]])\n\n\n- 상관계수의 성질: 절대값이 1보다 작다.\n#"
  },
  {
    "objectID": "posts/02wk-1.html#c.-산점도를-보고-상관계수의-부호를-해석",
    "href": "posts/02wk-1.html#c.-산점도를-보고-상관계수의-부호를-해석",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "C. 산점도를 보고 상관계수의 부호를 해석",
    "text": "C. 산점도를 보고 상관계수의 부호를 해석\n# 예제 – 키와 몸무게의 산점도 + 상관계수의 부호해석\n- 질문: 아래의 그림은 상관계수 \\(r\\)의 값이 양수인가 음수인가?\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n\nplt.plot(x,y,'o')\n\n\n\n\n- 차근차근 따져보자.\n\nxx = x-np.mean(x)\nyy = y-np.mean(y) \nxxx = xx/np.sqrt(np.sum(xx**2))\nyyy = yy/np.sqrt(np.sum(yy**2))\n\n\nfig, (ax1,ax2,ax3) = plt.subplots(1,3,figsize=(10,3))\nax1.plot(x,y,'o'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(xx,yy,'o'); ax2.set_title(r'$(x_i-\\bar{x},y_i-\\bar{y})$')\nax3.plot(xxx,yyy,'o'); ax3.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\n\nText(0.5, 1.0, '$(\\\\tilde{x}_i,\\\\tilde{y}_i)$')\n\n\n\n\n\n\n\\(\\tilde{x}_i\\), \\(\\tilde{y}_i\\) 를 곱한값이 양수인것과 음수인것을 체크해보자.\n양수인쪽이 많은지 음수인쪽이 많은지 생각해보자.\n\\(r=\\sum_{i=1}^{n}\\tilde{x}_i \\tilde{y}_i\\) 의 부호는?\n\n- 그림을 보고 상관계수의 부호를 알아내는 방법? \\((x_i,y_i)\\)의 산점도를 보고 \\((\\tilde{x}_i, \\tilde{y}_i)\\) 의 산점도를 상상 \\(\\to\\) 1,3 분면에 점들이 많으면 양수, 2,4 분면에 점들이 많으면 음수\n#"
  },
  {
    "objectID": "posts/02wk-1.html#d.-산점도를-보고-상관계수의-절대값을-해석",
    "href": "posts/02wk-1.html#d.-산점도를-보고-상관계수의-절대값을-해석",
    "title": "02wk-1: 객체지향적 시각화 (2), Subplot, 산점도 응용예제 1-2",
    "section": "D. 산점도를 보고 상관계수의 절대값을 해석",
    "text": "D. 산점도를 보고 상관계수의 절대값을 해석\n# 예제 – 기울기가 동일, 그렇지만 직선근처의 퍼짐이 다른 경우\n- 자료가 아래와 같다고 하자.\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))\ny2=x+np.random.normal(loc=0,scale=7.0,size=len(x))\n\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\n\n\n\n\n- \\((x_i,y_i)\\)의 그래프와 \\((\\tilde{x}_i,\\tilde{y}_i)\\)의 그래프를 그려보자.\n\ndef tilde(x):\n    xx = x-np.mean(x)\n    xxx = xx / np.sqrt(np.sum(xx**2))\n    return xxx \n\n\nfig, (ax1,ax2) = plt.subplots(1,2,figsize=(4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x),tilde(y1),'.'); ax2.plot(tilde(x),tilde(y2),'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n#\n# 예제2 – 직선근처의 퍼짐은 동일하지만, 직선의 기울기가 다른 경우\n- 자료가 아래와 같다고 하자.\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))\ny2=0.2*x+np.random.normal(loc=0,scale=1.0,size=len(x))\n\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\n\n\n\n\n- \\((x_i,y_i)\\)의 그래프와 \\((\\tilde{x}_i,\\tilde{y}_i)\\)의 그래프를 그려보자.\n\ndef tilde(x):\n    xx = x-np.mean(x)\n    xxx = xx / np.sqrt(np.sum(xx**2))\n    return xxx \n\n\nfig, (ax1,ax2) = plt.subplots(1,2,figsize=(4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x),tilde(y1),'.'); ax2.plot(tilde(x),tilde(y2),'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n#"
  }
]